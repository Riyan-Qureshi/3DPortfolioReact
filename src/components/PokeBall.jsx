/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: VyrianStudios (https://sketchfab.com/vynatic)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/pokeball-9b6a97ead28041a48496dd1a57b2ea39
Title: Pokeball
*/

import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { useGSAP } from '@gsap/react';
import gsap from 'gsap';

const PokeBall = (props) => {
  const { nodes, materials } = useGLTF('/models/pokeball.glb')
  const pokeRef = useRef();
  useGSAP(() => {
    gsap.to(pokeRef.current.position, {
      y: pokeRef.current.position.y + 0.5,
      duration: 1.5,
      repeat: -1,
      yoyo: true,
    });
    gsap
      .timeline({
        repeat: -1,
        repeatDelay: 0.05,
      })
      .to(pokeRef.current.rotation, {
        y: `+=${2*Math.PI}`,
        x: `+=${-2*Math.PI}`,
        duration: 10.5,
      });
  });
  return (
    <group {...props} ref={pokeRef} dispose={null}>
      <group rotation={[-Math.PI / 2, 0, 0]}>
        <group scale={1}>
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Pokeball_0.geometry}
            material={materials.material}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Pokeball_1.geometry}
            material={materials.White}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Pokeball_1_1.geometry}
            material={materials.White}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Pokeball_2.geometry}
            material={materials.Gray}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Pokeball_2_1.geometry}
            material={materials.Gray}
          />
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/models/pokeball.glb')

export default PokeBall;