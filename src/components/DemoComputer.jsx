/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: Tyler P Halterman (https://sketchfab.com/tylerhalterman)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/desktop-computer-561abc2fc95941609fc7bc6f232895c2
Title: Desktop Computer
*/

import { useGSAP } from '@gsap/react';
import { useGLTF, useTexture, useVideoTexture } from '@react-three/drei'
import gsap from 'gsap';
import { useEffect, useRef } from 'react';

const DemoComputer = (props) => {
  const group = useRef();
  const { nodes, materials } = useGLTF('/models/desktop_computer.glb')
  const txt = useVideoTexture(props.texture ? props.texture : '/textures/project/project1.mp4');
//   const txt2 = useTexture('/textures/cube.png');
  const mousePos = [-0.1,0,0.2];
  const mouseScale = 0.8;
  
  useEffect(() => {
    if(txt) {
        txt.flipY = true;
    }
  });

  useGSAP(() => {gsap.from(group.current.rotation, {
    y: -Math.PI / 2,
    duration: 1.5,
    ease: 'power3.out'
  })}, txt)

  return (
    <group {...props} dispose={null} ref={group}>
      <group rotation={[-Math.PI / 2, 0, 0]} scale={0.501}>
        <group rotation={[Math.PI / 2, 0, 0]}>
          {/* Scroll Wheel */}
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.defaultMaterial.geometry}
            material={materials['01___Default']}
            scale={mouseScale}
            position={mousePos}
          />

          {/* Mouse */}
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.defaultMaterial_1.geometry}
            material={materials['01___Default']}
            scale={mouseScale}
            position={mousePos}
          />


          <mesh
            castShadow
            receiveShadow
            geometry={nodes.defaultMaterial_2.geometry}
            material={materials['01___Default']}
          />


          <mesh
            castShadow
            receiveShadow
            geometry={nodes.defaultMaterial_3.geometry}
            material={materials['01___Default']}
          />

          {/* Monitor Panel */}
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.defaultMaterial_4.geometry}
            material={materials['01___Default']}
            scale={1.1}
          >
            {/* <meshBasicMaterial map={txt2}/> */}
          </mesh>

          {/* Monitor Screen */}
          <mesh
            position={[-0.17,0.19,-0.256]}
          >
            <planeGeometry args={[1.54,0.94,2,2]}/>
            <meshStandardMaterial map={txt}/>
          </mesh>

          {/* Keyboard */}
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.defaultMaterial_5.geometry}
            material={materials['01___Default']}
            scale={0.7}
            position={[0.1,0,0.2]}
          />
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/models/desktop_computer.glb')

export default DemoComputer;